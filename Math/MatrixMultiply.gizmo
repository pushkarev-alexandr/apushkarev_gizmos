#v1.2 Pushkarev Aleksandr 2025
Group {
 name MatrixMultiply1
 help "Multiplies two images as if they were matrices (element-wise multiplication)"
 addUserKnob {20 user_tab l MatrixMultiply}
 addUserKnob {26 info l "" +STARTLINE T "Multiplies two images as if they were matrices (element-wise multiplication)"}
 addUserKnob {26 version_author l "" +STARTLINE T "<span style=\"color:#666\"><br/><b>MatrixMultiply v1.2</b> | Pushkarev Aleksandr | 2025</span>"}
}
 Input {
  inputs 0
  name Input2
  xpos -241
  ypos 16
  number 1
 }
 Assert {
  expression {{"\[exists parent.input1]"}}
  message "Connect input 2!"
  name Assert2
  xpos -241
  ypos 74
 }
 Mirror2 {
  flip true
  name Mirror2_1
  xpos -241
  ypos 126
 }
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -241
  ypos 187
 }
 Dot {
  name Dot1
  note_font_size 30
  xpos -210
  ypos 248
 }
 Input {
  inputs 0
  name Input1
  xpos -380
  ypos 16
 }
 Assert {
  expression {{"\[exists parent.input0]"}}
  message "Connect input 1!"
  name Assert1
  xpos -380
  ypos 74
 }
 Assert {
  expression {{Input1.width==Input2.height}}
  message "Input1 width must be equal to Input2 height!"
  name Assert3
  xpos -380
  ypos 132
 }
 Crop {
  box {0 0 {width} {height}}
  name Crop1
  xpos -380
  ypos 187
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.green
  name Copy1
  xpos -380
  ypos 242
 }
 Remove {
  operation keep
  channels {rgba.red rgba.green -rgba.blue none}
  name Remove1
  xpos -380
  ypos 278
 }
 Reformat {
  type "to box"
  box_width {{Input2.width}}
  box_height {{Input1.height}}
  box_fixed true
  resize none
  center false
  pbb true
  name Reformat1
  xpos -380
  ypos 343
 }
 BlinkScript {
  recompileCount 36
  ProgramGroup 1
  KernelDescription "3 \"MatrixMultiply\" iterate pixelWise 7b048b03aea40f244912430500d31a4eb147392a494e81f3c940f93ac664bec9 2 \"src\" Read Random \"dst\" Write Point 1 \"commonDim\" Int 1 AAAAAA== 1 \"commonDim\" 1 1 Default 0"
  kernelSource "kernel MatrixMultiply : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eWrite> dst;\n  \n  param:\n    int commonDim;\n\n  void process(int2 pos)\n  \{\n    float sum = 0.0f;\n    for (int i = 0; i < commonDim; i++)\n    \{\n      sum += src(i, pos.y, 0) * src(pos.x, i, 1);\n    \}\n    dst() = float2(sum, 0);\n  \}\n\};"
  rebuild ""
  MatrixMultiply_src {rgba.red rgba.green -rgba.blue none}
  MatrixMultiply_commonDim {{Input1.width}}
  outputChannels {rgba.red rgba.green -rgba.blue none}
  rebuild_finalise ""
  name BlinkScript1
  xpos -380
  ypos 402
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop3
  xpos -380
  ypos 438
 }
 Remove {
  operation keep
  channels {rgba.red -rgba.green -rgba.blue none}
  name Remove2
  xpos -380
  ypos 502
 }
 Output {
  name Output1
  xpos -380
  ypos 567
 }
end_group
