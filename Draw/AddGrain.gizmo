#v1.0 Pushkarev Aleksandr 2023
Group {
 name AddGrain1
 addUserKnob {20 user_tab l AddGrain}
 addUserKnob {22 calc_button l Calculate T "import nuke\nimport math\nimport re\n\ndef arange(start, end, step):\n  while start <= end:\n    yield float(start)\n    start += step\n\ndef analyze(node):\n  with node:\n    # get nodes for sampling\n    ex = nuke.toNode('Expression1')\n    sa = nuke.toNode('MergeExpression1')\n    ct = nuke.toNode('CurveTool1')\n    # and their knob values we need\n    ik = ct\['intensitydata']\n    mn = ex\['mn_e'].getValue()\n    mx = ex\['mx_e'].getValue()\n    sw = ex\['sw'].getValue()\n    # sample frames are blended together, so it doesn't matter what frame we're on\n    fr = nuke.frame()\n    # get lut and reset it\n    lut = nuke.toNode('ColorLookup1')\['lut']\n    lut.fromScript('red \{curve\}\\ngreen \{curve\}\\nblue \{curve\}')\n    chl = \['red', 'green', 'blue']\n    # generate sample list in stops from middle grey\n    samples = list(arange(mn, mx, sw))\n    task = nuke.ProgressTask('Analysis In Progress:')\n\n    for i, ch in enumerate(chl):\n      sa\['ch'].setValue(i)\n      ik.clearAnimated()\n      # store previous sample\n      pvy = 0\n      for s in samples:\n        if task.isCancelled():\n          return\n        task.setMessage('channel: \{0\}\\n sample: \{1\}'.format(chl\[i], s))\n        # set sample to current position\n        ex\['p'].setValue(s)\n        # get sample values from curvetool\n        nuke.execute(ct, fr, fr)\n        v = ik.getValue()\n        vn = v\[3] # alpha value for normalization\n        if vn != 0:\n          vy = (v\[0] / vn) / (v\[1] / vn) # normalize by target \n          vx = v\[2] / vn\n          # make sure sample values do not decrease\n          if vy > pvy:\n            lut.setValueAt(vy, vx, i+1)\n            pvy = vy\n        else:\n          # skip if no samples at the exposure in image\n          #print('no samples at \{0\} stops'.format(s))\n          pass\n        \n    ex\['p'].setValue(0)\n    del task\n    # continue first and last keyframes in lut\n    lutc = re.sub(r'(x\\d+.\\d+ \\d+.\\d+)\[^.]*\}', r'C \\1\}', lut.toScript())\n    lutc = re.sub(r'(\{curve )', r'\\1C ', lutc)\n    lut.fromScript(lutc)\n\nanalyze(nuke.thisNode())" +STARTLINE}
 addUserKnob {26 version_author l "" +STARTLINE T "<span style=\"color:#666\"><br/><b>AddGrain v1.0</b> | Pushkarev Aleksandr | 2023</span>"}
}
 Input {
  inputs 0
  name comp
  xpos 617
  ypos 243
  number 3
 }
 Dot {
  name Dot30
  xpos 651
  ypos 498
 }
set N6d433c00 [stack 0]
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve}
    blue {curve}
    alpha {}}
  name ColorLookup1
  xpos 507
  ypos 495
 }
 Input {
  inputs 0
  name grain
  xpos 378
  ypos 249
  number 2
 }
 Dot {
  name Dot25
  xpos 412
  ypos 421
 }
set N6d433000 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge2
  xpos 378
  ypos 495
 }
 Dot {
  name Dot2
  xpos 412
  ypos 572
 }
push $N6d433c00
 Merge2 {
  inputs 2
  operation plus
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge1
  xpos 617
  ypos 569
 }
 Output {
  name Output1
  xpos 617
  ypos 631
 }
push $N6d433000
 Input {
  inputs 0
  name denoise
  xpos 262
  ypos 249
 }
 Dot {
  name Dot1
  xpos 296
  ypos 341
 }
 Input {
  inputs 0
  name plate
  xpos 132
  ypos 248
  number 1
 }
 MergeExpression {
  inputs 2
  temp_name0 pl
  temp_expr0 ch==0?Br:ch==1?Bg:Bb
  temp_name1 dn
  temp_expr1 ch==0?Ar:ch==1?Ag:Ab
  expr0 fabs(dn-pl)
  expr1 0
  expr2 dn
  name MergeExpression1
  xpos 132
  ypos 338
  addUserKnob {20 User}
  addUserKnob {3 ch}
 }
 MergeExpression {
  inputs 2
  temp_name0 ch
  temp_expr0 MergeExpression1.ch
  expr1 fabs(ch==0?Ar:ch==1?Ag:Ab)
  name MergeExpression2
  xpos 132
  ypos 418
 }
 Expression {
  temp_name3 xt
  temp_expr3 b>=mn&&b<=mx
  expr0 r*xt
  expr1 g*xt
  expr2 b*xt
  expr3 xt
  name Expression1
  xpos 132
  ypos 473
  addUserKnob {20 Params}
  addUserKnob {7 mn_e l "min exp" t "lowest sample position in stops from 0.18.\n\nif your comp  is _very_ dark, you may need to lower this." R -10 0}
  mn_e -7
  addUserKnob {7 mx_e l "max exp" t "highest sample position in stops from 0.18." R 0 10}
  mx_e 7
  addUserKnob {7 p t "sample position in stops around 0.18\n" R -12 12}
  p 1
  addUserKnob {7 sw t "step size in stops for each sample.\n\ne.g. 1 will do a sample analysis starting at position = min exp, at 1 stop increments to max exp" R 0 2}
  sw 1
  addUserKnob {7 tg l target t "target grain intensity value it will be normalized to. \n\njust sets the base grain intensity level." R 0 0.1}
  tg 0.005
  addUserKnob {7 mn}
  mn {{0.18*2**(p-sw/2)}}
  addUserKnob {7 mx}
  mx {{0.18*2**(p+sw/2)}}
 }
 CurveTool {
  channels rgba
  ROI {0 0 {width} {height}}
  autocropdata {512 288 1536 864}
  intensitydata {0 0 0 0}
  name CurveTool1
  xpos 132
  ypos 497
 }
end_group
